import{obi as e}from"@iosio/obi";const t=(t={})=>{let{screenSizes:a=["xs","xs","sm","md","lg","xl","xxl"],customPropPrepend:r="--x-mediaMatch_",sizeMap:m={}}=t,n={xs:"360px",sm:"600px",md:"800px",lg:"960px",xl:"1280px",xxl:"1920px",...m},o=window.matchMedia;const s=window.getComputedStyle(document.documentElement);let i,l=s.getPropertyValue(r+"numCols");l=l&&parseInt(l)||12;let c=()=>{i=a.map((e,t)=>`screen and (${0===t?"max":"min"}-width:${s.getPropertyValue(r+e)||n[e]})`)},d=()=>[...a.filter((e,t)=>!!o(i[t]).matches&&e)],p={...[...Array(l+1)].map((e,t)=>(t/l*100).toFixed(8)+"%")};c();let x=d(),h=e({matching:x,match:x[x.length-1]}),g=()=>{let e=d();h.$merge({matching:e,match:e[e.length-1]})},u=[];return i.forEach(e=>u.push(o(e))),u.forEach(e=>e.addListener(g)),h.update=()=>{u.forEach(e=>e.removeListener(g)),u=[],c(),i.forEach(e=>u.push(o(e))),u.forEach(e=>e.addListener(g))},{mediaMatch:h,getStyles:(e,t)=>{let a={};for(let r,m,n=e.length;n--;)if(r=t[e[n]],m=p[r],r+""&&m){a={flexBasis:m,maxWidth:m,...0===r?{display:"none"}:{}};break}return a},screenSizes:a}};export{t as createMediaMatch};
//# sourceMappingURL=createMediaMatch.js.map
