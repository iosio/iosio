import{isString as t,isObj as e,isArray as a}from"@iosio/util";import{obi as r}from"@iosio/obi";const o=()=>{let o=window,s=t=>{if(!t)return"";var e=decodeURIComponent(t);return"false"!==e&&("true"===e||(0*+e==0?+e:e))},n=t=>{let e,a,r,n={};if(r=(t=t||o.location.search).indexOf("?"),r<0)return;let l=(t=t.substr(r+1)).split("&");for(;e=l.shift();)e=e.split("="),a=e.shift(),n[a]=void 0!==n[a]?[].concat(n[a],s(e.shift())):s(e.shift());return n},l=t=>{var e,r,o,s=encodeURIComponent,n="";for(e in t)if(void 0!==(o=t[e]))if(a(o))for(r=0;r<o.length;r++)n&&(n+="&"),n+=s(e)+"="+s(o[r]);else n&&(n+="&"),n+=s(e)+"="+s(o);return"?"+n},i=()=>{let{pathname:t,search:e}=o.location;return{url:t+e,pathname:t,search:e,params:n()}},p=i(),{url:u,pathname:c}=p,h=r({$lastUrl:u,$lastPathname:c,$lastType:"initial",...p,getParams:n,stringifyParams:l,getLocation:i,route(a,r,s){let n=t(a)?a:location.pathname;r=e(a)?a:r||"",s=s||"push";const{pathname:p,url:h}=i();"replace"!==s&&(u=h,c=p),((t,a,r)=>{a=e(a)?l(a):a,o.history[r+"State"](null,null,t+a)})(n,r,s),"replace"===s?setTimeout(()=>m({type:s})):m({type:s})}});h.routerSwitch=({root:t,pathMap:e,noMatch:a})=>{let r=null,o=!1,{pathname:s,$lastPathname:n,$lastUrl:l,$lastType:i,url:p}=h,u=p===l;return a=a||"/",t?r=e["/"+s.split("/")[1]]||e[a]:e[s]?r=e[s]:n!==s&&e[n]?(h.route(l,location.search,"replace"),r=e[n],o=!0):a&&e[a]&&(h.route(a,location.search,"replace"),r=e[a]),{next:r,toLast:o,noChange:u,replacedLast:"replace"===i}};var m=t=>{h.$merge({...i(),$lastUrl:"popstate"===t.type?h.url:u,$lastPathname:"popstate"===t.type?h.pathname:c,$lastType:t.type})};return o.addEventListener("popstate",m),h},s=o();export{o as createRouting,s as routing};
//# sourceMappingURL=index.js.map
