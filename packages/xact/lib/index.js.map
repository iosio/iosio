{"version":3,"file":"index.js","sources":["../src/setProperty.js","../src/index.js"],"sourcesContent":["import {isFunc, isNum, isString} from \"@iosio/util\";\nconst IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;\n\nconst eventProxy = function (e) {\n    return this._listeners[e.type](e);\n};\n\nconst setStyle = (style, key, value) => {\n    if (key[0] === '-') style.setProperty(key, value);\n    else style[key] = isNum(value)\n    && IS_NON_DIMENSIONAL.test(key) === false ? value + 'px' : value == null ? '' : value;\n};\n\nexport const setProperty = (dom, name, value, oldValue, isSvg) => {\n    name = isSvg ? name === 'className' ? 'class' : name : name === 'class' ? 'className' : name;\n    if (name === 'key' || name === 'children') {\n    } else if (name === 'style') {\n        const s = dom.style;\n        if (isString(value)) s.cssText = value;\n        else {\n            if (isString(oldValue)) (s.cssText = '', oldValue = null);\n            if (oldValue) for (let i in oldValue) if (!(value && i in value)) setStyle(s, i, '');\n            if (value) for (let i in value) if (!oldValue || value[i] !== oldValue[i]) setStyle(s, i, value[i]);\n        }\n    } else if (name[0] === 'o' && name[1] === 'n') {\n        let useCapture = name !== (name = name.replace(/Capture$/, ''));\n        let nameLower = name.toLowerCase();\n        name = (nameLower in dom ? nameLower : name).slice(2);\n        if (value) {\n            if (!oldValue) dom.addEventListener(name, eventProxy, useCapture);\n            (dom._listeners || (dom._listeners = {}))[name] = value;\n        } else dom.removeEventListener(name, eventProxy, useCapture);\n    } else if (name !== 'list' && name !== 'tagName'\n        && name !== 'form' && !isSvg && name in dom) {\n        dom[name] = value == null ? '' : value;\n    } else if (!isFunc(value) && name !== 'dangerouslySetInnerHTML') {\n        if (name !== (name = name.replace(/^xlink:?/, ''))) {\n            if (value == null || value === false) dom.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n            else dom.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n        } else if (value == null || value === false) dom.removeAttribute(name);\n        else dom.setAttribute(name, value);\n    }\n};","import {isFunc, isBool, isString, isNum, isArray, d} from \"@iosio/util\";\n\nimport {setProperty} from \"./setProperty\";\n\nconst EMPTY_OBJ = {};\nconst EMPTY_ARR = [];\n\n\nconst Fragment = props => props.children;\n\nfunction assign(obj, props) {\n    for (let i in props) obj[i] = props[i];\n    return (obj);\n}\n\nconst createVNode = (type, props, key, ref) => ({\n    type,\n    props,\n    key,\n    ref,\n    _children: null,\n    _parent: null,\n    _depth: 0,\n    _dom: null,\n    _lastDomChild: null,\n    _component: null,\n    constructor: undefined\n});\n\nconst applyRef = (ref, value) => isFunc(ref) ? ref(value) : (ref.current = value),\n\n    coerceToVNode = (possibleVNode) => {\n        if (possibleVNode == null || isBool(possibleVNode)) return null;\n        if (isString(possibleVNode) || isNum(possibleVNode)) {\n            return createVNode(null, possibleVNode, null, null);\n        }\n        if (possibleVNode._dom != null || possibleVNode._component != null) {\n            let vnode = createVNode(possibleVNode.type, possibleVNode.props, possibleVNode.key, null);\n            vnode._dom = possibleVNode._dom;\n            return vnode;\n        }\n        return possibleVNode;\n    },\n\n    toChildArray = (children, callback, flattened) => {\n        if (flattened == null) flattened = [];\n        if (children == null || isBool(children)) {\n            if (callback) flattened.push(callback(null));\n        } else if (isArray(children)) {\n            for (let i = 0; i < children.length; i++) toChildArray(children[i], callback, flattened);\n        } else flattened.push(callback ? callback(coerceToVNode(children)) : children);\n        return flattened;\n    },\n\n    getDomSibling = (vnode, childIndex) => {\n        if (childIndex == null) {\n            return vnode._parent ? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1) : null;\n        }\n        let sibling;\n        for (; childIndex < vnode._children.length; childIndex++) {\n            sibling = vnode._children[childIndex];\n            if (sibling != null && sibling._dom != null) return sibling._dom;\n        }\n        return isFunc(vnode.type) ? getDomSibling(vnode) : null;\n    },\n\n\n    diffProps = (dom, newProps, oldProps, isSvg, hydrate) => {\n        let i;\n        for (i in oldProps) if (!(i in newProps)) setProperty(dom, i, null, oldProps[i], isSvg);\n        for (i in newProps) {\n            if ((!hydrate || isFunc(newProps[i])) && i !== 'value' && i !== 'checked' && oldProps[i] !== newProps[i]) {\n                setProperty(dom, i, newProps[i], oldProps[i], isSvg);\n            }\n        }\n    },\n\n    unmount = (vnode, parentVNode, skipRemove) => {\n        let r;\n        if (r = vnode.ref) applyRef(r, null, parentVNode);\n        let dom;\n        if (!skipRemove && !isFunc(vnode.type)) skipRemove = (dom = vnode._dom) != null;\n        vnode._dom = vnode._lastDomChild = null;\n        if ((r = vnode._component) != null) {\n            r.base = r._parentDom = null;\n        }\n        if (r = vnode._children) for (let i = 0; i < r.length; i++) if (r[i]) unmount(r[i], parentVNode, skipRemove);\n        if (dom != null) dom.remove();\n    },\n    diffChildren = (parentDom, newParentVNode, oldParentVNode, context, isSvg, excessDomChildren, oldDom) => {\n        let i, j, oldVNode, newDom, sibDom, firstChildDom, refs;\n        let oldChildren = oldParentVNode && oldParentVNode._children || EMPTY_ARR;\n        let oldChildrenLength = oldChildren.length;\n\n        if (oldDom == EMPTY_OBJ) {\n            if (excessDomChildren != null) oldDom = excessDomChildren[0];\n            else if (oldChildrenLength) oldDom = getDomSibling(oldParentVNode, 0);\n            else oldDom = null;\n        }\n\n        i = 0;\n        newParentVNode._children = toChildArray(newParentVNode._children, childVNode => {\n            if (childVNode != null) {\n                childVNode._parent = newParentVNode;\n                childVNode._depth = newParentVNode._depth + 1;\n                oldVNode = oldChildren[i];\n                if (oldVNode === null || oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n                    oldChildren[i] = undefined;\n                } else {\n                    for (j = 0; j < oldChildrenLength; j++) {\n                        oldVNode = oldChildren[j];\n                        if (oldVNode && childVNode.key == oldVNode.key && childVNode.type === oldVNode.type) {\n                            oldChildren[j] = undefined;\n                            break;\n                        }\n                        oldVNode = null;\n                    }\n                }\n                oldVNode = oldVNode || EMPTY_OBJ;\n                newDom = diff(parentDom, childVNode, oldVNode, context, isSvg, excessDomChildren, oldDom);\n\n                if ((j = childVNode.ref) && oldVNode.ref != j) (refs || (refs = [])).push(j, newDom, childVNode);\n\n                if (newDom != null) {\n                    if (firstChildDom == null) firstChildDom = newDom;\n                    if (childVNode._lastDomChild != null) {\n                        newDom = childVNode._lastDomChild;\n                        childVNode._lastDomChild = null;\n                    } else if (excessDomChildren == oldVNode || newDom != oldDom || newDom.parentNode == null) {\n\n                        outer: if (oldDom == null || oldDom.parentNode !== parentDom) {\n                            parentDom.appendChild(newDom);\n                        } else {\n                            for (sibDom = oldDom, j = 0; (sibDom = sibDom.nextSibling) && j < oldChildrenLength; j += 2) {\n                                if (sibDom == newDom) {\n                                    break outer;\n                                }\n                            }\n                            parentDom.insertBefore(newDom, oldDom);\n                        }\n                        if (newParentVNode.type == 'option') parentDom.value = '';\n                    }\n                    oldDom = newDom.nextSibling;\n                    if (isFunc(newParentVNode.type)) newParentVNode._lastDomChild = newDom;\n                }\n            }\n            i++;\n            return childVNode;\n        });\n\n        newParentVNode._dom = firstChildDom;\n\n        if (excessDomChildren != null && !isFunc(newParentVNode.type))\n            for (i = excessDomChildren.length; i--;) if (excessDomChildren[i] != null) excessDomChildren[i].remove();\n\n        for (i = oldChildrenLength; i--;) if (oldChildren[i] != null)\n            unmount(oldChildren[i], oldChildren[i]);\n\n        if (refs) for (i = 0; i < refs.length; i++) applyRef(refs[i], refs[++i], refs[++i]);\n    },\n\n\n    diffElementNodes = (dom, newVNode, oldVNode, context, isSvg, excessDomChildren) => {\n        let i,\n            oldProps = oldVNode.props,\n            newProps = newVNode.props,\n            newVNodeType = newVNode.type;\n        isSvg = newVNodeType === 'svg' || isSvg;\n        if (dom == null && excessDomChildren != null) {\n            for (i = 0; i < excessDomChildren.length; i++) {\n                const child = excessDomChildren[i];\n                if (child != null && (newVNodeType === null ? child.nodeType === 3 : child.localName === newVNodeType)) {\n                    dom = child;\n                    excessDomChildren[i] = null;\n                    break;\n                }\n            }\n        }\n        if (dom == null) {\n            if (newVNodeType === null) return d.createTextNode(newProps);\n            dom = isSvg\n                ? d.createElementNS('http://www.w3.org/2000/svg', newVNodeType)\n                : d.createElement(newVNodeType);\n            excessDomChildren = null;\n        }\n\n        if (newVNodeType === null) {\n            if (excessDomChildren != null) excessDomChildren[excessDomChildren.indexOf(dom)] = null;\n            if (oldProps !== newProps) dom.data = newProps;\n        } else if (newVNode !== oldVNode) {\n            if (excessDomChildren != null) excessDomChildren = EMPTY_ARR.slice.call(dom.childNodes);\n            oldProps = oldVNode.props || EMPTY_OBJ;\n            let oldHtml = oldProps.dangerouslySetInnerHTML, newHtml = newProps.dangerouslySetInnerHTML;\n\n            if (oldProps === EMPTY_OBJ) {\n                oldProps = {};\n                for (let i = 0; i < dom.attributes.length; i++) oldProps[dom.attributes[i].name] = dom.attributes[i].value;\n            }\n            if (newHtml || oldHtml) {\n                if (!newHtml || !oldHtml || newHtml.__html != oldHtml.__html) dom.innerHTML = newHtml && newHtml.__html || '';\n            }\n\n            diffProps(dom, newProps, oldProps, isSvg);\n            newVNode._children = newVNode.props.children;\n            if (!newHtml) {\n                diffChildren(\n                    dom, newVNode, oldVNode, context, newVNode.type === 'foreignObject' ? false : isSvg,\n                    excessDomChildren, EMPTY_OBJ\n                );\n            }\n            if ('value' in newProps && newProps.value !== undefined && newProps.value !== dom.value) dom.value = newProps.value == null ? '' : newProps.value;\n            if ('checked' in newProps && newProps.checked !== undefined && newProps.checked !== dom.checked) dom.checked = newProps.checked;\n\n        }\n        return dom;\n    },\n\n    diff = (parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, oldDom) => {\n        let tmp, newType = newVNode.type;\n        if (newVNode.constructor !== undefined) return null;\n        if (isFunc(newType)) {\n            let newProps = newVNode.props;\n            newVNode._component = newType;\n            tmp = newType(newProps);\n            let isTopLevelFragment = tmp != null && tmp.type == Fragment && tmp.key == null;\n            newVNode._children = toChildArray(isTopLevelFragment ? tmp.props.children : tmp);\n            diffChildren(parentDom, newVNode, oldVNode, context, isSvg, excessDomChildren, oldDom);\n        } else {\n            newVNode._dom = diffElementNodes(oldVNode._dom, newVNode, oldVNode, context, isSvg, excessDomChildren);\n        }\n        return newVNode._dom;\n    },\n\n    createElement = function (type, props, children) {\n        let args = arguments;\n        props = assign({}, props);\n        if (args.length > 3) {\n            children = [children];\n            for (let i = 3; i < args.length; i++) children.push(args[i]);\n        }\n        if (children != null) props.children = children;\n        let ref = props.ref, key = props.key;\n        if (ref != null) delete props.ref;\n        if (key != null) delete props.key;\n        return createVNode(type, props, key, ref);\n    },\n\n    render = (vnode, parentDom) => {\n        let oldVNode = parentDom._children;\n        vnode = createElement(Fragment, null, [vnode]);\n        diff(\n            parentDom,\n            parentDom._children = vnode,\n            oldVNode || EMPTY_OBJ,\n            EMPTY_OBJ,\n            parentDom.ownerSVGElement !== undefined,\n            oldVNode ? null : EMPTY_ARR.slice.call(parentDom.childNodes),\n            EMPTY_OBJ,\n        );\n    };\n\nexport {Fragment, createElement as h, render, toChildArray, setProperty};"],"names":["IS_NON_DIMENSIONAL","eventProxy","e","_listeners","type","setStyle","style","key","value","setProperty","isNum","test","dom","name","oldValue","isSvg","s","isString","cssText","i","useCapture","replace","nameLower","toLowerCase","slice","addEventListener","removeEventListener","isFunc","removeAttributeNS","setAttributeNS","removeAttribute","setAttribute","EMPTY_OBJ","EMPTY_ARR","Fragment","props","children","assign","obj","createVNode","ref","_children","_parent","_depth","_dom","_lastDomChild","_component","constructor","applyRef","current","toChildArray","callback","flattened","isBool","push","isArray","length","possibleVNode","vnode","getDomSibling","childIndex","indexOf","sibling","unmount","parentVNode","skipRemove","r","base","_parentDom","remove","diffChildren","parentDom","newParentVNode","oldParentVNode","context","excessDomChildren","oldDom","j","oldVNode","newDom","sibDom","firstChildDom","refs","oldChildren","oldChildrenLength","childVNode","diff","parentNode","outer","appendChild","nextSibling","insertBefore","newVNode","tmp","newType","newProps","oldProps","newVNodeType","child","nodeType","localName","d","createTextNode","createElementNS","createElement","data","call","childNodes","oldHtml","dangerouslySetInnerHTML","newHtml","attributes","__html","innerHTML","hydrate","checked","args","arguments","render","ownerSVGElement"],"mappings":"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"}